<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="12" passed="6" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-08-21T20:00:35Z" name="Suite" finished-at="2018-08-21T20:00:43Z" duration-ms="8381">
    <groups>
    </groups>
    <test started-at="2018-08-21T20:00:35Z" name="GCTest" finished-at="2018-08-21T20:00:38Z" duration-ms="3075">
      <class name="test.testingXM.NewTestSon">
        <test-method is-config="true" signature="beforeTest(java.lang.String, java.lang.String)[pri:0, instance:test.testingXM.NewTestSon@279fedbd]" started-at="2018-08-21T15:00:35Z" name="beforeTest" finished-at="2018-08-21T15:00:38Z" duration-ms="2772" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[gc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[production]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="fp()[pri:0, instance:test.testingXM.NewTestSon@279fedbd]" started-at="2018-08-21T15:00:38Z" name="fp" finished-at="2018-08-21T15:00:38Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fp -->
        <test-method signature="f1()[pri:0, instance:test.testingXM.NewTestSon@279fedbd]" started-at="2018-08-21T15:00:38Z" name="f1" finished-at="2018-08-21T15:00:38Z" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[bad luck expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: bad luck expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at test.testingXM.NewTestSon.f1(NewTestSon.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method signature="f2()[pri:0, instance:test.testingXM.NewTestSon@279fedbd]" started-at="2018-08-21T15:00:38Z" name="f2" finished-at="2018-08-21T15:00:38Z" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[bad luck expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: bad luck expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at test.testingXM.NewTestSon.f2(NewTestSon.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method signature="f3()[pri:0, instance:test.testingXM.NewTestSon@279fedbd]" started-at="2018-08-21T15:00:38Z" name="f3" finished-at="2018-08-21T15:00:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f3 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.testingXM.NewTestSon@279fedbd]" started-at="2018-08-21T15:00:38Z" name="afterTest" finished-at="2018-08-21T15:00:38Z" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.testingXM.NewTestSon -->
    </test> <!-- GCTest -->
    <test started-at="2018-08-21T20:00:38Z" name="FFTest" finished-at="2018-08-21T20:00:42Z" duration-ms="3759">
      <class name="test.testingXM.NewTestSon">
        <test-method is-config="true" signature="beforeTest(java.lang.String, java.lang.String)[pri:0, instance:test.testingXM.NewTestSon@7530ad9c]" started-at="2018-08-21T15:00:38Z" name="beforeTest" finished-at="2018-08-21T15:00:41Z" duration-ms="2774" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[production]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="fp()[pri:0, instance:test.testingXM.NewTestSon@7530ad9c]" started-at="2018-08-21T15:00:41Z" name="fp" finished-at="2018-08-21T15:00:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fp -->
        <test-method signature="f1()[pri:0, instance:test.testingXM.NewTestSon@7530ad9c]" started-at="2018-08-21T15:00:41Z" name="f1" finished-at="2018-08-21T15:00:41Z" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[bad luck expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: bad luck expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at test.testingXM.NewTestSon.f1(NewTestSon.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method signature="f2()[pri:0, instance:test.testingXM.NewTestSon@7530ad9c]" started-at="2018-08-21T15:00:41Z" name="f2" finished-at="2018-08-21T15:00:41Z" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[bad luck expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: bad luck expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at test.testingXM.NewTestSon.f2(NewTestSon.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method signature="f3()[pri:0, instance:test.testingXM.NewTestSon@7530ad9c]" started-at="2018-08-21T15:00:41Z" name="f3" finished-at="2018-08-21T15:00:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f3 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.testingXM.NewTestSon@7530ad9c]" started-at="2018-08-21T15:00:41Z" name="afterTest" finished-at="2018-08-21T15:00:42Z" duration-ms="963" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.testingXM.NewTestSon -->
    </test> <!-- FFTest -->
    <test started-at="2018-08-21T20:00:42Z" name="IETest" finished-at="2018-08-21T20:00:43Z" duration-ms="1429">
      <class name="test.testingXM.NewTestSon">
        <test-method is-config="true" signature="beforeTest(java.lang.String, java.lang.String)[pri:0, instance:test.testingXM.NewTestSon@33c911a1]" started-at="2018-08-21T15:00:42Z" name="beforeTest" finished-at="2018-08-21T15:00:43Z" duration-ms="1397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[production]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="fp()[pri:0, instance:test.testingXM.NewTestSon@33c911a1]" started-at="2018-08-21T15:00:43Z" name="fp" finished-at="2018-08-21T15:00:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fp -->
        <test-method signature="f1()[pri:0, instance:test.testingXM.NewTestSon@33c911a1]" started-at="2018-08-21T15:00:43Z" name="f1" finished-at="2018-08-21T15:00:43Z" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[bad luck expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: bad luck expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at test.testingXM.NewTestSon.f1(NewTestSon.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method signature="f2()[pri:0, instance:test.testingXM.NewTestSon@33c911a1]" started-at="2018-08-21T15:00:43Z" name="f2" finished-at="2018-08-21T15:00:43Z" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[bad luck expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: bad luck expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at test.testingXM.NewTestSon.f2(NewTestSon.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method signature="f3()[pri:0, instance:test.testingXM.NewTestSon@33c911a1]" started-at="2018-08-21T15:00:43Z" name="f3" finished-at="2018-08-21T15:00:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f3 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.testingXM.NewTestSon@33c911a1]" started-at="2018-08-21T15:00:43Z" name="afterTest" finished-at="2018-08-21T15:00:43Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.testingXM.NewTestSon -->
    </test> <!-- IETest -->
  </suite> <!-- Suite -->
</testng-results>
