<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="6" passed="4" failed="0" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-08-20T20:13:48Z" name="Suite" finished-at="2018-08-20T20:13:56Z" duration-ms="8656">
    <groups>
    </groups>
    <test started-at="2018-08-20T20:13:48Z" name="GCTest" finished-at="2018-08-20T20:13:51Z" duration-ms="3051">
      <class name="test.testingXM.NewTestSon">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:test.testingXM.NewTestSon@2a5c8d3f]" started-at="2018-08-20T15:13:48Z" name="beforeTest" finished-at="2018-08-20T15:13:50Z" duration-ms="2849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[gc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="fp()[pri:0, instance:test.testingXM.NewTestSon@2a5c8d3f]" started-at="2018-08-20T15:13:50Z" name="fp" finished-at="2018-08-20T15:13:50Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fp -->
        <test-method signature="f()[pri:0, instance:test.testingXM.NewTestSon@2a5c8d3f]" started-at="2018-08-20T15:13:50Z" name="f" finished-at="2018-08-20T15:13:50Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.testingXM.NewTestSon@2a5c8d3f]" started-at="2018-08-20T15:13:50Z" name="afterTest" finished-at="2018-08-20T15:13:51Z" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.testingXM.NewTestSon -->
    </test> <!-- GCTest -->
    <test started-at="2018-08-20T20:13:51Z" name="FFTest" finished-at="2018-08-20T20:13:55Z" duration-ms="4060">
      <class name="test.testingXM.NewTestSon">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:test.testingXM.NewTestSon@3c3d9b6b]" started-at="2018-08-20T15:13:51Z" name="beforeTest" finished-at="2018-08-20T15:13:54Z" duration-ms="2921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="fp()[pri:0, instance:test.testingXM.NewTestSon@3c3d9b6b]" started-at="2018-08-20T15:13:54Z" name="fp" finished-at="2018-08-20T15:13:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fp -->
        <test-method signature="f()[pri:0, instance:test.testingXM.NewTestSon@3c3d9b6b]" started-at="2018-08-20T15:13:54Z" name="f" finished-at="2018-08-20T15:13:54Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.testingXM.NewTestSon@3c3d9b6b]" started-at="2018-08-20T15:13:54Z" name="afterTest" finished-at="2018-08-20T15:13:55Z" duration-ms="1121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.testingXM.NewTestSon -->
    </test> <!-- FFTest -->
    <test started-at="2018-08-20T20:13:55Z" name="IETest" finished-at="2018-08-20T20:13:56Z" duration-ms="1415">
      <class name="test.testingXM.NewTestSon">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:test.testingXM.NewTestSon@71e9ddb4]" started-at="2018-08-20T15:13:55Z" name="beforeTest" finished-at="2018-08-20T15:13:55Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Unexpected error launching Internet Explorer. Browser zoom level was set to 150%. It should be set to 100%
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'LAPTOP-IC7GV0L7', ip: '9.86.121.187', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '10.0.2'
Driver info: driver.version: InternetExplorerDriver
remote stacktrace: ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Unexpected error launching Internet Explorer. Browser zoom level was set to 150%. It should be set to 100%
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'LAPTOP-IC7GV0L7', ip: '9.86.121.187', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '10.0.2'
Driver info: driver.version: InternetExplorerDriver
remote stacktrace: 
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57)
	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline.findFirst(Unknown Source)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212)
	at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:221)
	at org.openqa.selenium.ie.InternetExplorerDriver.<init>(InternetExplorerDriver.java:213)
	at org.openqa.selenium.ie.InternetExplorerDriver.<init>(InternetExplorerDriver.java:150)
	at test.testingXM.NewTest.beforeTest(NewTest.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="fp()[pri:0, instance:test.testingXM.NewTestSon@71e9ddb4]" started-at="2018-08-20T15:13:56Z" name="fp" finished-at="2018-08-20T15:13:56Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fp -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.testingXM.NewTestSon@71e9ddb4]" started-at="2018-08-20T15:13:56Z" name="afterTest" finished-at="2018-08-20T15:13:56Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method signature="f()[pri:0, instance:test.testingXM.NewTestSon@71e9ddb4]" started-at="2018-08-20T15:13:56Z" name="f" finished-at="2018-08-20T15:13:56Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- test.testingXM.NewTestSon -->
    </test> <!-- IETest -->
  </suite> <!-- Suite -->
</testng-results>
